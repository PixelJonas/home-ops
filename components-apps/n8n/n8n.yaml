apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "111"
  name: n8n-app
  namespace: openshift-gitops
spec:
  destination:
    namespace: n8n
    server: "https://kubernetes.default.svc"
  source:
    chart: app-template
    repoURL: https://bjw-s-labs.github.io/helm-charts
    targetRevision: 4.3.0
    helm:
      values: |-

        defaultPodOptions:
          dnsPolicy: None
          dnsConfig:
            nameservers:
              - 172.30.0.10
            searches:
              - svc.cluster.local
              - cluster.local
              - altus.janz.digital
              - janz.lan
              - janz.digital

        controllers:
          vllm:
            containers:
              vllm:
                resources:
                  limits:
                    nvidia.com/gpu: 1
                image:
                  repository: docker.io/vllm/vllm-openai
                  tag: v0.11.0
                  pullPolicy: IfNotPresent
                command: ["/bin/sh", "-c"]
                args: [
                        "vllm serve ibm-granite/granite-3.1-8b-instruct --enable-auto-tool-choice --tool-call-parser granite --trust-remote-code --enable-chunked-prefill --max_num_batched_tokens 1024 --dtype auto --max-model-len 37296 --api-key secrettoken"
                      ]
                env:
                  TZ: Europe/Berlin
                  HUGGING_FACE_HUB_TOKEN: 
                     valueFrom:
                      secretKeyRef:
                        name: n8n-credentials
                        key: huggingface-token
 
          unifi-mcp:
            containers:
              unifi-mcp:
                image:
                  repository: ghcr.io/sirkirby/unifi-network-mcp
                  tag: 0.1.3
                  pullPolicy: IfNotPresent
                env:
                  TZ: Europe/Berlin
                  UNIFI_PORT: 443
                  UNIFI_SITE: default
                  UNIFI_VERIFY_SSL: false
                  UNIFI_MCP_HTTP_ENABLED: true
                  UNIFI_HOST:
                    valueFrom:
                      secretKeyRef:
                        name: unifi-mcp-credentials
                        key: host
                  UNIFI_USERNAME:
                    valueFrom:
                      secretKeyRef:
                        name: unifi-mcp-credentials
                        key: username
                  UNIFI_PASSWORD:
                    valueFrom:
                      secretKeyRef:
                        name: unifi-mcp-credentials
                        key: password
          paperless-mcp:
            containers:
              paperless-mcp:
                image:
                  repository: ghcr.io/baruchiro/paperless-mcp
                  tag: latest
                env:
                  TZ: Europe/Berlin
                  PAPERLESS_URL: https://paperless.apps.altus.janz.digital
                  PAPERLESS_API_KEY:
                    valueFrom:
                      secretKeyRef:
                        name: paperless-mcp-credentials
                        key: apikey
          n8n-pgvector:
            containers:
              database:
                image:
                  repository: pgvector/pgvector
                  tag: 0.8.1-pg18-trixie
                  pullPolicy: IfNotPresent
                env:
                  POSTGRES_DB: n8n
                  POSTGRES_INITDB_ARGS: '--data-checksums'
                  POSTGRES_USER:
                    valueFrom:
                      secretKeyRef:
                        name: n8n-pgvector-credentials
                        key: user
                  POSTGRES_PASSWORD:
                    valueFrom:
                      secretKeyRef:
                        name: n8n-pgvector-credentials
                        key: password
          n8n:
            containers:
              n8n:
                image:
                  repository: ghcr.io/n8n-io/n8n
                  tag: 1.117.1
                  pullPolicy: IfNotPresent
                env:
                  TZ: Europe/Berlin
                  GENERIC_TIMEZONE: Europe/Berlin
                  APP_ENV: prod
                  DB_TYPE: postgresdb
                  DB_POSTGRESDB_HOST: n8n-db-rw.n8n.svc.cluster.local
                  DB_POSTGRESDB_PORT: 5432
                  DB_POSTGRESDB_DATABASE: n8n
                  DB_POSTGRESDB_USER: n8n
                  DB_POSTGRESDB_PASSWORD:
                    valueFrom:
                      secretKeyRef:
                        name: n8n-db-n8n-secret
                        key: password
                  N8N_HOST:
                    valueFrom:
                      secretKeyRef:
                        name: n8n-credentials
                        key: host
                  N8N_PORT: 8080
                  NODE_ENV: production
                  WEBHOOK_URL:
                    valueFrom:
                      secretKeyRef:
                        name: n8n-credentials
                        key: webhookurl
                  N8N_HIRING_BANNER_ENABLED: false
                  N8N_RUNNERS_ENABLED: true
                  N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: false
                  N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE: true
                  N8N_SMTP_SSL: true
                  N8N_SMTP_PORT: 465
                  N8N_SMTP_HOST:
                    valueFrom:
                      secretKeyRef:
                        name: n8n-credentials
                        key: mailhost
                  N8N_SMTP_SENDER:
                    valueFrom:
                      secretKeyRef:
                        name: n8n-credentials
                        key: mailfrom
                  N8N_SMTP_USER:
                    valueFrom:
                      secretKeyRef:
                        name: n8n-credentials
                        key: mailusername
                  N8N_SMTP_PASS:
                    valueFrom:
                      secretKeyRef:
                        name: n8n-credentials
                        key: mailpassword

        persistence:
          home:
            globalMounts:
              - path: /home/node/
            storageClass: lvms-vg1
            accessMode: ReadWriteOnce
            size: 5Gi
          config:
            globalMounts:
              - path: /.n8n
            storageClass: lvms-vg1
            accessMode: ReadWriteOnce
            size: 1Gi
          cache:
            globalMounts:
              - path: /.cache
            storageClass: lvms-vg1
            accessMode: ReadWriteOnce
            size: 1Gi
          npm:
            globalMounts:
              - path: /.npm
            storageClass: lvms-vg1
            accessMode: ReadWriteOnce
            size: 5Gi
          n8n-pgvector:
            advancedMounts:
              n8n-pgvector:
                n8n-pgvector:
                  - path: /var/lib/postgresql/data
            storageClass: lvms-vg1
            accessMode: ReadWriteOnce
            size: 5Gi
          vllm:
            advancedMounts:
              vllm:
                vllm:
                  - path: /.cache/huggingface
            storageClass: lvms-vg1
            accessMode: ReadWriteOnce
            size: 250Gi
          vllm-config:
            advancedMounts:
              vllm:
                vllm:
                  - path: /.config
            storageClass: lvms-vg1
            accessMode: ReadWriteOnce
            size: 1Gi
          shm:
            type: emptyDir
            medium: Memory
            sizeLimit: 4Gi
            globalMounts:
              - path: /dev/shm

        service:
          n8n:
            controller: n8n
            ports:
              http:
                port: 8080
          unifi-mcp:
            controller: unifi-mcp
            ports:
              http:
                port: 3000
          paperless-mcp:
            controller: paperless-mcp
            ports:
              http:
                port: 3000
          n8n-pgvector:
            controller: n8n-pgvector
            ports:
              http:
                port: 5432
          vllm:
            controller: vllm
            ports:
              http:
                port: 8000

        ingress:
          n8n:
            enabled: true
            className: openshift-default
            annotations:
              route.openshift.io/termination: "edge"
            hosts:
              - host: n8n.apps.altus.janz.digital
                paths:
                  - path: /
                    service:
                      identifier: n8n
                      port: http

  project: cluster-apps
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true
